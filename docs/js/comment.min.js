GithubComments={_accessToken:void 0,_clientId:void 0,_clientSecret:void 0,_owner:void 0,_repos:void 0,_emojiJson:void 0,ACCEPT_JSON:"application/json",ACCESS_TOKEN_NAME:"GIT_ACCESS_TOKEN",EMOJI_JSON:"EMOJI_JSON",CORS_ANYWHERE:"https://cors-anywhere.herokuapp.com/",PARAM_CODE:"code",SCOPE:"public_repo",GITHUB_GPI:"https://api.github.com",ERROR:{ISSUE_NOT_FOUND:"Comment issue not found, maybe not created.",UNHANDLE_EXCEPTION:"Error",NOT_LOGIN:"User has not login.",ISSUE_ID_NOT_EXIST:"The issue id not exist"},Init:function(t,e,o,s,n){GithubComments._repos=e,GithubComments._owner=t,GithubComments._clientId=o,GithubComments._clientSecret=s;var i=localStorage.getItem(GithubComments.ACCESS_TOKEN_NAME);i&&(GithubComments._accessToken=i);var m=localStorage.getItem(GithubComments.EMOJI_JSON);m?(GithubComments._emojiJson=JSON.parse(m),n&&n()):GithubComments.Emoji.Init(function(t){n&&n()})},User:{_userInfo:void 0,Login:function(t){t||(t=location.href);var e={scope:GithubComments.SCOPE,redirect_uri:t,client_id:GithubComments._clientId,client_secret:GithubComments._clientSecret};location.href="https://github.com/login/oauth/authorize?"+Object.keys(e).map(function(t){return encodeURIComponent(t)+"="+encodeURIComponent(e[t])}).join("&")},Logout:function(){localStorage.removeItem(GithubComments.ACCESS_TOKEN_NAME),GithubComments._accessToken=void 0,GithubComments.User._userInfo=void 0},GetAccessToken:function(t,e){if(GithubComments._accessToken)e&&e(GithubComments._accessToken);else{if(!t){var o=window.location.href,s=o.indexOf("?"),n=(n=o.slice(s+1)).split("&"),i={};for(index in n){var m=n[index].split("=");i[m[0]]=m[1]}i[GithubComments.PARAM_CODE]&&(t=i[GithubComments.PARAM_CODE])}t?$.ajax({method:"POST",url:GithubComments.CORS_ANYWHERE+"https://github.com/login/oauth/access_token",data:{client_id:GithubComments._clientId,client_secret:GithubComments._clientSecret,code:t},headers:{Accept:GithubComments.ACCEPT_JSON,"X-Requested-With":"XMLHttpRequest"}}).done(function(t){t.access_token&&(GithubComments._accessToken=t.access_token,localStorage.setItem(GithubComments.ACCESS_TOKEN_NAME,t.access_token)),e&&e(t.access_token)}):e&&e(void 0)}},Get:function(e){GithubComments.User.GetAccessToken(void 0,function(t){GithubComments._accessToken?GithubComments.User._userInfo?e&&e(GithubComments.User._userInfo):$.ajax({url:"https://api.github.com/user?"+$.param({access_token:GithubComments._accessToken}),dataType:"json",success:function(t){GithubComments.User._userInfo=t}}).done(function(t){e&&e(t)}):e&&e(void 0)})},IsLogin:function(){return Boolean(GithubComments.User._userInfo)}},Comments:{Get:function(t,s){t?$.ajax({url:GithubComments.GITHUB_GPI+"/repos/"+GithubComments._owner+"/"+GithubComments._repos+"/issues/"+t+"/comments",dataType:"json",error:function(t,e,o){o=GithubComments.ERROR.UNHANDLE_EXCEPTION;"404"==t.status&&(o=GithubComments.ERROR.ISSUE_NOT_FOUND),s&&s({status:!1,data:o})},success:function(t){s&&s({status:!0,data:t})}}):s&&s({status:!1,data:GithubComments.ERROR.ISSUE_ID_NOT_EXIST})},Add:function(t,e,o){GithubComments.User.IsLogin||o&&o({status:!1,data:GithubComments.ERROR.NOT_LOGIN}),$.ajax({method:"POST",url:GithubComments.GITHUB_GPI+"/repos/"+GithubComments._owner+"/"+GithubComments._repos+"/issues/"+t+"/comments?"+$.param({access_token:GithubComments._accessToken}),data:JSON.stringify({body:e}),dataType:"json",success:function(t){o&&o({status:!0,data:t})}})},Count:function(t,s){t?$.ajax({url:"https://api.github.com/repos/"+GithubComments._owner+"/"+GithubComments._repos+"/issues/"+t,dataType:"json",error:function(t,e,o){o=GithubComments.ERROR.UNHANDLE_EXCEPTION;"404"==t.status&&(o=GithubComments.ERROR.ISSUE_NOT_FOUND),s&&s({status:!1,data:o})},success:function(t){0<=t.comments&&s&&s({status:!0,count:t.comments})}}):s&&s({status:!1,data:GithubComments.ERROR.ISSUE_ID_NOT_EXIST})}},Issue:{Create:function(t,e){}},Emoji:{Init:function(e){$.ajax({method:"GET",url:GithubComments.GITHUB_GPI+"/emojis",headers:{Accept:GithubComments.ACCEPT_JSON}}).done(function(t){localStorage.setItem(GithubComments.EMOJI_JSON,JSON.stringify(t)),GithubComments._emojiJson=t,e&&e(t)})},Parse:function(t){var e=t,o=t.match(/:.+?:/g);for(index in o){var s=o[index],n=o[index].slice(1,-1);GithubComments._emojiJson&&GithubComments._emojiJson[n]&&(e=e.replace(s,'<img class="emoji" title="'+n+'" alt="'+n+'" src="'+GithubComments._emojiJson[n]+'" height="20" width="20">'))}return e}}};